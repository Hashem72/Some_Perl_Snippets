package MathsTools;

use strict;
use warnings;


########################    subroutines ########################## 

sub log2($){
    my $n = shift;

    my $L = (log($n))/(log(2));
    return $L;
}#log2#


sub pfm2pwm($$){
    my $pfm      = shift;
    my $nucliotides_prior_prob = shift;
    
    my $pwm = [];
    
    my $number_of_seqs_in_used = &get_get_total_number_of_seqs_used_in_freq_matrix($pfm);
    print
	"number_of_seqs_in_used is $number_of_seqs_in_used \n";
	
    my $number_of_rows = @{$pfm};
    my $number_of_cols = @{$pfm->[0]};
    
    for (my $r = 0; $r < $number_of_rows; $r++) {
	for (my $c = 0; $c < $number_of_cols; $c++) {
	    
	    $pwm->[$r][$c] = $pfm->[$r][$c];
	  #  $pwm->[$r][$c] =   ($pfm->[$r][$c] + $nucliotides_prior_prob->[$c]) / (  ($number_of_seqs_in_used+1)* $nucliotides_prior_prob->[$c] );    
	}
    }
    return $pwm;
}#pfm2pwm#

sub print_out_a_matrix($){
    my $matrix = shift;
    
    my $numbero_of_rows = @{$matrix};
    my $number_of_cols =  @{$matrix->[0]};
    for (my $r = 0; $r < $numbero_of_rows; $r++) {
	for (my $c = 0; $c < $number_of_cols; $c++) {
	    printf("%3d  ", $matrix->[$r][$c]);
	}
	print
	    "\n";
    }
}#print_out_a_matirx#




sub print_out_freq_in_each_col($){
    my $matrix      = shift;
    
    my $number_of_rows = @{$matrix};
    my $number_of_cols = @{$matrix->[0]};
    
    for (my $c = 0; $c < $number_of_cols; $c++) {
	my $sum = 0;
	for (my $r = 0; $r < $number_of_rows; $r++) {
	    $sum = $sum + $matrix->[$r][$c];
	}
	print
	    "col = $c\t sum_of_freqs = $sum\n";
    }
			       }#print_out_freq_in_each_col#

sub print_out_freq_in_each_row($){
    my $matrix    = shift;

    my $number_of_rows = @{$matrix};
    my $number_of_cols = @{$matrix->[0]};
    for (my $r = 0; $r < $number_of_rows; $r++) {
	my $sum = 0;
	for (my $c = 0; $c < $number_of_cols; $c++) {
	    $sum = $sum + $matrix->[$r][$c];
	}
	print
	    "row = $r\t sum_of_freqs = $sum\n";
    }

}# print_out_freq_in_each_row#

sub get_get_total_number_of_seqs_used_in_freq_matrix($){
    my $freq_matrix   = shift;

    my $sum = 0;
    for (my $c = 0; $c < 4; $c++) {
	$sum = $sum + $freq_matrix->[0][$c];
    }
    return $sum;
}#get_get_total_number_of_seqs_used_in_freq_matrix#

1;
